[{"/home/tarunluthra/Desktop/URL-Shortener/src/index.js":"1","/home/tarunluthra/Desktop/URL-Shortener/src/contexts/AuthContext.js":"2","/home/tarunluthra/Desktop/URL-Shortener/src/components/App.js":"3","/home/tarunluthra/Desktop/URL-Shortener/src/firebase.js":"4","/home/tarunluthra/Desktop/URL-Shortener/src/components/Dashboard.js":"5","/home/tarunluthra/Desktop/URL-Shortener/src/components/Signup.js":"6","/home/tarunluthra/Desktop/URL-Shortener/src/components/LoginPage.js":"7","/home/tarunluthra/Desktop/URL-Shortener/src/components/Layout.js":"8","/home/tarunluthra/Desktop/URL-Shortener/src/components/ListItem.js":"9","/home/tarunluthra/Desktop/URL-Shortener/src/components/CreateNew.js":"10","/home/tarunluthra/Desktop/URL-Shortener/src/components/EditLink.js":"11"},{"size":331,"mtime":1611670832601,"results":"12","hashOfConfig":"13"},{"size":1047,"mtime":1611672459255,"results":"14","hashOfConfig":"13"},{"size":830,"mtime":1611734123739,"results":"15","hashOfConfig":"13"},{"size":504,"mtime":1611753626991,"results":"16","hashOfConfig":"13"},{"size":2878,"mtime":1611735979044,"results":"17","hashOfConfig":"13"},{"size":2411,"mtime":1611672058781,"results":"18","hashOfConfig":"13"},{"size":2170,"mtime":1611672074265,"results":"19","hashOfConfig":"13"},{"size":1127,"mtime":1611817320646,"results":"20","hashOfConfig":"13"},{"size":1141,"mtime":1611750401016,"results":"21","hashOfConfig":"13"},{"size":3367,"mtime":1611817318658,"results":"22","hashOfConfig":"13"},{"size":3268,"mtime":1611994900876,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ehraqw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tarunluthra/Desktop/URL-Shortener/src/index.js",[],["51","52"],"/home/tarunluthra/Desktop/URL-Shortener/src/contexts/AuthContext.js",[],"/home/tarunluthra/Desktop/URL-Shortener/src/components/App.js",["53","54","55","56"],"import React,{useEffect, useState} from \"react\";\nimport { BrowserRouter as Router, Route, Switch, useLocation } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport LoginPage from \"./LoginPage\";\nimport Signup from \"./Signup\";\nimport { useAuth } from './../contexts/AuthContext';\nimport '../assets/css/app.css'\nimport CreateNew from \"./CreateNew\";\nimport EditLink from \"./EditLink\";\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login\" component={LoginPage}></Route>\n\t\t\t\t\t<Route path=\"/signup\" component={Signup}></Route>\n\t\t\t\t\t<Route exact path='/urls/new' component={CreateNew}></Route>\n\t\t\t\t\t<Route path='/urls/:path' component={EditLink}></Route>\n\t\t\t\t\t<Route path=\"/\" component={Dashboard}></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/home/tarunluthra/Desktop/URL-Shortener/src/firebase.js",[],"/home/tarunluthra/Desktop/URL-Shortener/src/components/Dashboard.js",["57","58","59"],"import React, { useState, useEffect } from \"react\";\nimport { useAuth } from './../contexts/AuthContext';\nimport { useLocation, Link } from 'react-router-dom'\nimport Layout from \"./Layout\";\nimport { Alert } from 'react-bootstrap'\nimport ListItem from './ListItem'\nimport '../assets/css/dashboard.css'\nimport { Button } from 'semantic-ui-react'\n\nconst Dashboard = (props) => {\n    const [list, setList] = useState([])\n    const [error, setError] = useState(null)\n    const { currentUser, db } = useAuth()\n    const location = useLocation()\n\tconst [redirectList, setRedirectList] = useState([])\n\t\n\tuseEffect(() => {\n\t\tconst urlListRef = db.collection('url-lists')\n\t\turlListRef.get().then(snapshot => {\n\t\t\tconst urlList = []\n\t\t\tsnapshot.forEach(doc => {\n\t\t\t\tconst data = doc.data()\n\t\t\t\turlList.push({\n\t\t\t\t\tshortUrl: data.shortUrl,\n\t\t\t\t\tlongUrl: data.longUrl\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\tsetRedirectList(urlList)\n\t\t})\n\t}, [])\n\n    async function fetchData() {\n        if (!currentUser) {\n            setError(\"You must login first\")\n            return\n        }\n        const urlListRef = db.collection('url-lists')\n        const snapshot = await urlListRef.where('uid', '==', currentUser.uid).get()\n        if (snapshot.empty) {\n            setError(\"No shortlinks created\")\n        }\n        else {\n            setError(null)\n            const arr = []\n            snapshot.forEach(doc => {\n                arr.push(doc.data())\n            })\n\n            setList(arr)\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [currentUser])\n\n    \n\t\n\tuseEffect(() => {\n        if (location) {\n            const currentUrl = location.pathname.substring(1)\n            const obj = redirectList.find(urlObj => urlObj.shortUrl == currentUrl)\n            \n            if (!obj) {\n                return\n            }\n            window.location.href = obj.longUrl\n        }\n\t},[location, redirectList])\n\n    return (\n        <Layout>\n            <div className=\"dashboard-container\">\n                <span className=\"dashboard-header\">\n                    <span>Your Shortlinks</span>\n                    <Link to='/urls/new'>\n                        <Button color='blue' size=\"large\">Create new+</Button>\n                    </Link>\n                </span>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                {list.length > 0 && \n                    <table className=\"dashboard-table\">\n                        <tr>\n                            <th>S.No.</th>                    \n                            <th>Long URL</th>\n                            <th>Short URL</th>\n                            <th>Modify</th>\n                        </tr>\n                        {list.map((item,index) => <ListItem item={item} sno={index+1}/>)}\n                    </table>\n                }\n            </div>\n        </Layout>\n    );\n};\n\nexport default Dashboard;","/home/tarunluthra/Desktop/URL-Shortener/src/components/Signup.js",[],"/home/tarunluthra/Desktop/URL-Shortener/src/components/LoginPage.js",[],"/home/tarunluthra/Desktop/URL-Shortener/src/components/Layout.js",["60"],"import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { useAuth } from './../contexts/AuthContext';\nimport '../assets/css/layout.css'\nimport fire from '../assets/fire.jpg'\n\nconst Layout = (props) => {\n    const { currentUser, logout } = useAuth()\n\n    return (\n       <div className=\"layout-container\">\n            <div className=\"header\">\n                <span id=\"logo\">\n                    <img src={fire} alt='Logo'/>\n                </span>\n                <nav className=\"navbar\">\n                    <span></span>\n                    <span className=\"navlinks\">\n                        {currentUser &&     <Link to='/'>Dashboard</Link>}\n                        {currentUser &&     <a onClick={logout}>Log out</a>}\n                        {!currentUser &&    <Link to='/login'>Log in</Link>}\n                        {!currentUser &&    <Link to='/signup'>Sign up</Link>}\n                    </span>\n                </nav>\n            </div>\n            <section className=\"body-container container\">\n                {props.children}\n            </section>\n       </div>\n    )\n}\n\nexport default Layout;","/home/tarunluthra/Desktop/URL-Shortener/src/components/ListItem.js",[],"/home/tarunluthra/Desktop/URL-Shortener/src/components/CreateNew.js",["61"],"import React, { useRef, useState } from 'react';\nimport { Card, InputGroup, FormControl, Alert } from 'react-bootstrap';\nimport { Button, Icon } from 'semantic-ui-react'\nimport Layout from './Layout'\nimport '../assets/css/createnew.css'\nimport { useAuth } from './../contexts/AuthContext'\n\nconst CreateNew = (props) => {\n    const baseUrl = window.location.href.slice(0, -8)\n    const longUrlRef = useRef()\n    const shortUrlRef = useRef()\n    const { currentUser, db } = useAuth()\n    const [error, setError] = useState(null);\n    \n\n    function generateRandomString(length = 4) {\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n        let result = ''\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * characters.length))\n        }\n        return result\n    }\n\n    async function handleCreateNew() {\n        const longUrl = longUrlRef.current.value\n        let shortUrl = shortUrlRef.current.value\n        let selfGeneratedShortUrl = false\n        if (shortUrl.length == 0) {\n            shortUrl = generateRandomString()\n            selfGeneratedShortUrl = true\n        }\n        const urlListRef = db.collection('url-lists')\n        let check = await urlListRef.where('shortUrl', '==', shortUrl).get();\n        // console.log(check)\n        if (!check.empty) {\n            console.log('ok')\n            if (selfGeneratedShortUrl) {\n                while (!check.empty) {\n                    check = await urlListRef.where('shortUrl', '==', shortUrl).get();\n                }\n            }\n            else {\n                setError('Shortlink already taken.')\n            }\n        }\n\n        const res = await urlListRef.add({\n            uid: currentUser.uid,\n            longUrl,\n            shortUrl\n        })\n        if (res.id) {\n            props.history.push('/urls/' + shortUrl)\n        }\n    }\n\n    return (\n        <Layout>\n            <Card className=\"create-new-card\">\n                <h1>Create new shortlink</h1>\n                <p>Create a tiny link to have a huge impact</p>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                <Card.Body>\n                    <label for=\"long-url-input\">URL to shorten</label>\n                    <br />\n                    <InputGroup className=\"mb-3\">\n                        <FormControl id=\"long-url-input\" placeholder=\"https://www.google.co.in/\" ref={longUrlRef}/>\n                    </InputGroup>\n                    \n                    <br />\n                    <label htmlFor=\"short-url-input\">Short URL (Optional)</label>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inp-group-text\">\n                                {baseUrl}\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl id=\"short-url-input\" aria-describedby=\"inp-group-text\" ref={shortUrlRef}/>\n                    </InputGroup>\n                    <label htmlFor=\"short-url-input\">Leave empty to generate a random shortlink</label>\n                    <Button onClick={handleCreateNew}>Create <Icon name='arrow right'></Icon></Button>\n                </Card.Body>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default CreateNew;\n","/home/tarunluthra/Desktop/URL-Shortener/src/components/EditLink.js",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":15,"nodeType":"70","messageId":"71","endLine":1,"endColumn":24},{"ruleId":"68","severity":1,"message":"72","line":1,"column":26,"nodeType":"70","messageId":"71","endLine":1,"endColumn":34},{"ruleId":"68","severity":1,"message":"73","line":2,"column":50,"nodeType":"70","messageId":"71","endLine":2,"endColumn":61},{"ruleId":"68","severity":1,"message":"74","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":31,"column":5,"nodeType":"77","endLine":31,"endColumn":7,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":56,"column":8,"nodeType":"77","endLine":56,"endColumn":21,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":63,"column":69,"nodeType":"83","messageId":"84","endLine":63,"endColumn":71},{"ruleId":"85","severity":1,"message":"86","line":20,"column":45,"nodeType":"87","endLine":20,"endColumn":65},{"ruleId":"81","severity":1,"message":"82","line":29,"column":29,"nodeType":"83","messageId":"84","endLine":29,"endColumn":31},{"ruleId":"68","severity":1,"message":"88","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":44},{"ruleId":"75","severity":1,"message":"89","line":29,"column":7,"nodeType":"77","endLine":29,"endColumn":9,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useLocation' is defined but never used.","'useAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [db]",{"range":"102","text":"103"},"Update the dependencies array to be: [currentUser, fetchData]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchDetails]",{"range":"106","text":"107"},[908,910],"[db]",[1523,1536],"[currentUser, fetchData]",[1076,1078],"[fetchDetails]"]